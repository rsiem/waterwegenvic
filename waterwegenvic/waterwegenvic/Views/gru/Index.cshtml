@model IEnumerable<waterwegenvic.Models.gru>

@{
    ViewBag.Title = "Stormwater";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/stormwater")
@Scripts.Render("~/bundles/stormwater")

<div class="row" id="groundwater">
    <div class="container-fluid">
        <div class=" row">
            <section class="first-section hero" style="background-image:url('../../Content/Image/heading-bg.png'); width: 100%">
                <div class="hero-inner text-context">
                    <p>Stormwater Pollution</p>
                    <div class="line-dec"></div>
                </div>
            </section>
        </div>
    </div>
</div>
<div class="row" id="groundwater-page">
    <div class="container-fluid">
        <div class="groundwater-page">
            <div class="container">
                <div class="row" id="introduction">
                    <p>
                        Mindless disposal of chemicals and waste products in the agricultural,
                        industrial and civil sectors often results in the contamination of
                        waterways. This often causes harm to the ecosystem or interferes with
                        the function of several ecological processes.
                    </p>
                </div>
            </div>
            <div class="container">
                <div class="row">
                    <div class="row" id="title">
                        <p>Change to your title</p>
                    </div>
                    <div class="row">

                    </div>
                </div>
            </div>
            <br />
            <br />
            <br />
            <br />
            <div class="container">

                <div class="row">
                    <div id="renderToDiv" style="background-color:#4F9DE7;width:800px;margin-left:auto;margin-right:auto;">

                    </div>
                    <!-- Modal -->
                    <div class="modal fade" id="rainDetailModal" role="dialog">
                        <div class="modal-dialog">

                            <!-- Modal content-->
                            <div class="modal-content">
                                <div class="modal-header modelDialogHeader">
                                    <button type="button" class="close closeModelDialog" data-dismiss="modal">&times;</button>
                                    <h4 class="modal-title">Rain</h4>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-lg-4 col-sm-4">
                                            <img src="~/Content/Image/WaterCycle/rain.jpg" draggable="false" style="width:100%;">
                                        </div>
                                        <div class="col-lg-8 col-sm-8">
                                            <p class="questionModelDialog">What is Rain? </p>
                                            <p class="answerModelDialog">Rain is liquid water in the form of droplets that have condensed from atmospheric water vapour and then become heavy enough to fall under gravity. </p>
                                            <p class="questionModelDialog">How can rain transfer into stormwater? </p>
                                            <p class="answerModelDialog">
                                                When the clouds grow, they collect more and more water, Do you Know… these water drops falling into ground in the form of rain
                                                Each year, 19700 million litres of rain falls on When the rains falls on the earth, and flows into drainage Melbourne, which would fill 7880 swimming pools. System, it becomes what we called stormwater.
                                                More than half of these water collected from sealed surfaces, such as roofs and roads.
                                            </p>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="stormWaterDetailModal" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content">
                                <div class="modal-header modelDialogHeader">
                                    <button type="button" class="close closeModelDialog" data-dismiss="modal">&times;</button>
                                    <h4 class="modal-title">Stormwater</h4>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-lg-4">
                                            <img src="~/Content/Image/WaterCycle/stormwater_.jpg" draggable="false" style="width:100%;">
                                        </div>
                                        <div class="col-lg-8">
                                            <p class="questionModelDialog">What is Storm Water?</p>
                                            <p class="answerModelDialog">Stormwater comes from precipitation events, which includes rain, storm events. Rain falls on the earth, flows along the surface as run-off, then enters the drainage system, now the water exists in the form of storm water</p>
                                            <p class="answerModelDialog">Long term effects like certain cancer is also the consequence of polluted groundwater. About 70 towns in Victoria rely on groundwater as their primary water supply.</p>
                                            <p class="questionModelDialog">How can groundwater polluted by storm water?</p>
                                            <p class="answerModelDialog">
                                                when stormwater seeps into the ground, now the water is available to us in the form of groundwater. However, stormwater carries pollutants (including leaves, sediment, oil and other hydrocarbons), and these are the cause of groundwater pollution.
                                                Do you Know...
                                                Each year, 105.73 million litres of stormwater flow into city’s water ways. If this stormwater is not intercepted by any form of water treatment, it will pollute our groundwater.
                                            </p>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="groundWaterDetailModal" role="dialog">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header modelDialogHeader">
                                    <button type="button" class="close closeModelDialog" data-dismiss="modal">&times;</button>
                                    <h4 class="modal-title">Groundwater</h4>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-lg-4">
                                            <img src="~/Content/Image/WaterCycle/groundwater.jpg" draggable="false" style="width:100%;">
                                        </div>
                                        <div class="col-lg-8">
                                            <p class="questionModelDialog">What is Ground Water?</p>
                                            <p class="answerModelDialog">Ground water is in pores and crevices of rocks and soil under the earth's surface. Aquifer is the layer that contain usable quantities of groundwater, aquifers lies under all parts of Victoria. precipitation</p>
                                            <p class="answerModelDialog">
                                                Groundwater the use of groundwater.it is the primary source of water supply in VICTORIA. Do you Know... - In Australia, groundwater makes up Drinking the groundwater being polluted can cause approximately 17% of accessible water resources serious diseases, such as hepatitis, dysentery; some and accounts for over 30% of our total water consumption.
                                            </p>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="drinkingWaterDetailModal" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content">
                                <div class="modal-header modelDialogHeader">
                                    <button type="button" class="close closeModelDialog" data-dismiss="modal">&times;</button>
                                    <h4 class="modal-title">Drinking Water</h4>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-lg-4">
                                            <img src="~/Content/Image/WaterCycle/drinkingwater.jpg" draggable="false" style="width:100%;">
                                        </div>
                                        <div class="col-lg-8">
                                            <p class="questionModelDialog">What water can used as drinking water?</p>
                                            <p class="answerModelDialog">Drinking water is the water safety to drink or to use for food preparation. The drinking water is needed for everyone to maintain good health. </p>
                                            <p class="questionModelDialog">The importance of drinking water </p>
                                            <p class="answerModelDialog">
                                                Water is an essential nutrient and makes up 50-60 % of the human body weight. The average person can survive
                                                Do you Know...
                                                for about 40 days without food, but most people will die if
                                                - a boy between 14-18 yr require 2.7L water they go for more than 72 hours without a drink
                                                per day. - a girl between 14-18 yr require 2.2L water per day.
                                            </p>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="waterWayDetailModal" role="dialog">
                        <div class="modal-dialog">

                            <!-- Modal content-->
                            <div class="modal-content">
                                <div class="modal-header modelDialogHeader">
                                    <button type="button" class="close closeModelDialog" data-dismiss="modal">&times;</button>
                                    <h4 class="modal-title">Waterways</h4>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-lg-4">
                                            <img src="~/Content/Image/WaterCycle/waterways.jpg" draggable="false" style="width:100%;">
                                        </div>
                                        <div class="col-lg-8">
                                            <p class="questionModelDialog">What is water ways?</p>
                                            <p class="answerModelDialog">Waterway is any navigable body of water. There are three categories of waterway in Victoria: which are inland water, enclosed water and coastal waters. The most common waterways we have seen is inland water like rivers, lakes or creeks.</p>
                                            <p class="questionModelDialog">How can water ways transfer back to the rain? - Evaporation</p>
                                            <p class="answerModelDialog">
                                                The sun heats up the water from waterways(lakes, rivers) and water changes into water vapour by the process of evaporation. These water vapours form tiny water droplets and eventually fall in the form of rain.
                                            </p>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="container">
                <div class="row">
                    <form onsubmit="return getPostcode()">
                        <div class="form-group">
                            <label for="postcode">Postcode:</label>
                            <input type="text" pattern="\d*" minlength="4" maxlength="4" class="form-control" id="postcode" placeholder="3000" name="postcode" value="">
                            <button type="submit" class="btn btn-default"><i class="fas fa-search"></i></button>
                        </div>
                    </form>
                    <script>
                        function getPostcode() {
                            pcode = document.forms[0].postcode.value;

                            // post code elements
                            pcElements = document.getElementsByClassName("post-code");
                            //console.log(pcElements[0].innerHTML.trim());
                            //pcElements[0].hide();
                            var i;
                            for (i = 0; i < pcElements.length; i++) {
                                pcElements[i].closest('tr').hidden = false;
                            }
                            var count = 0;
                            for (i = 0; i < pcElements.length; i++) {
                                var postcode = pcElements[i].innerHTML.trim();
                                if (postcode === pcode) {
                                    //console.log("success");
                                    count += 1;
                                    pcElements[i].closest('tr').setAttribute("id", "result");
                                } else {
                                    pcElements[i].closest('tr').hidden = true;
                                }
                            }

                            if (count == 0) {
                                document.getElementById("no-result").innerHTML = "No results found for " + pcode + ".";
                                document.getElementById("no-result").hidden = false;
                                document.getElementById("gru-table").hidden = true;
                                document.getElementById("placeholder").hidden = true;
                                document.getElementById("result-map").hidden = true;
                            } else {
                                document.getElementById("placeholder").innerHTML = "Showing results for " + pcode + ".";
                                document.getElementById("no-result").hidden = true;
                                document.getElementById("gru-table").hidden = false;
                                document.getElementById("placeholder").hidden = false;
                                document.getElementById("result-map").hidden = false;
                            }

                            document.getElementById("postcode").setAttribute("value", pcode);
                            document.getElementById("gru-results").style.display = "block";

                            return false;
                        }
                    </script>
                </div>
                <div class="row" id="gru-results" style="display:none;">
                    <div id="placeholder" name="placeholder"></div>
                    <div id="no-result" name="no-result" hidden></div>
                    <table id="gru-table" class="table">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Address)
                            </th>
                            <th hidden>
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Suburb)
                            </th>
                            <th hidden>
                            </th>
                            <th hidden>
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Site_history)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Restricted_uses)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Map_link)
                            </th>
                            @*<th></th>*@
                        </tr>
                        @foreach (var item in Model)
                        {
                            <tr class="coordinates">
                                <td>
                                    @Html.DisplayFor(modelItem => item.Address)
                                </td>
                                <td class="post-code" hidden>
                                    @Html.DisplayFor(modelItem => item.Post_Code)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Suburb)
                                </td>
                                <td hidden class="latitude">
                                    @Html.DisplayFor(modelItem => item.Latitude)
                                </td>
                                <td hidden class="longitude">
                                    @Html.DisplayFor(modelItem => item.Longitude)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Site_history)
                                </td>
                                <td class="restricted_use">
                                    @Html.DisplayFor(modelItem => item.Restricted_uses)
                                </td>
                                <td>
                                    <a href="@Html.DisplayFor(modelItem => item.Map_link)" target="_blank">More details</a>
                                </td>
                            </tr>
                        }
                    </table>
                </div>
                <div class="row" id="result-map" hidden>
                    <button class="btn btn-default" onclick="openMap()">Show on Map</button>
                    <div id="map" style="height:50vh; width: 100%"></div>
                </div>
            </div>
            <div class="container">
                <div class="row">
                    <div id="donut-chart"></div>
                    <script>
                        var data = [{
                            values: [2, 12, 8, 78],
                            labels: ['Urban', 'Domestic and stock', 'Power generation', 'Irrigation/Commmercial/Salinity Control'],
                            domain: { column: 0 },
                            name: 'Groundwater use',
                            hoverinfo: 'label+percent',
                            hole: .4,
                            type: 'pie',
                            marker: { colors: ["#E7F2F8", "#74BDCB", "#FFA384", "#EFE7BC"] }
                        }];

                        var layout = {
                            title: 'Groundwater Use in Victoria',
                            annotations: [
                                {
                                    font: {
                                        size: 20
                                    },
                                    showarrow: false,
                                    text: ' ',
                                    x: 0.17,
                                    y: 0.5
                                }
                            ],
                            height: 400,
                            width: 600,
                            showlegend: false,
                            grid: { rows: 1 }
                        };

                        Plotly.newPlot('donut-chart', data, layout, { displayModeBar: false, responsive: true });
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function drawChart() {

        var margin = { top: 10, right: 120, bottom: 10, left: 120 },
            width = 800 - margin.left - margin.right,
            height = 570 - margin.top - margin.bottom;
        var defaultColor = "white";
        var fontFamilty = "cursive";
        var innerCicleTextFontSize = "18px";
        var arrowCircleBorderWidth = "3px";
        var circleDefaultRadius = 50, circleHoverRadius = 55;

        // font-family: calibri;
        // default background dark color: #4F9DE7
        // light color: #8DC5E8

        var svg = d3.select("#renderToDiv").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .attr("viewbox", "0 0 800 570")
            .append("g")
            .attr("transform",
                "translate(" + margin.left + "," + margin.top + ")");

        // Arrows
        var svgDefs = svg.append("svg:defs");

        svgDefs.append("svg:marker")
            .attr("id", "triangle")
            .attr("refX", 6)
            .attr("refY", 6)
            .attr("markerWidth", 40)
            .attr("markerHeight", 40)
            .attr("markerUnits", "userSpaceOnUse")
            .attr("orient", "auto")
            .append("path")
            .attr("d", "M 0 0 12 6 0 12 3 6")
            .style("fill", defaultColor);

        // <rect id="rect" x="25%" y="25%" width="50%" height="50%" rx="15"/>
        //        svgDefs.append("rect")
        //            .attr("x", "25%")
        //            .attr("y", "25%").attr("width", "50%")
        //            .attr("height", "50%").attr("rx", "15");
        //        svgDefs.append("clipPath").attr("id", "clip")
        //            .append("use").attr("xlink:href", "#rect");

        //<use xlink:href="#rect" stroke-width="2" stroke="black"/>
        //svg.append("use").attr("xlink:href", "#rect").attr("stroke-width", "2").attr("stroke" , "black");

        // pattern for rain image, for showing image inside circle
        svgDefs.append("pattern")
            .attr("id", "rainImage")
            .attr("x", "0%")
            .attr("y", "0%")
            .attr("width", "100%")
            .attr("height", "100%").attr("viewBox", "0 0 100 100")
            .append('image')
            .attr('xlink:href', 'https://waterwegenvic.ml/Content/Image/WaterCycle/rain.jpg')
            .attr('width', 100)
            .attr('height', 100)
            .attr("x", "0%")
            .attr("y", "0%");

        // pattern for storm image, for showing image inside circle
        svgDefs.append("pattern")
            .attr("id", "stormWaterImage")
            .attr("x", "0%")
            .attr("y", "0%")
            .attr("width", "100%")
            .attr("height", "100%").attr("viewBox", "0 0 100 100")
            .append('image')
            .attr('xlink:href', 'https://waterwegenvic.ml/Content/Image/WaterCycle/stormwater_.jpg')
            .attr('width', 100)
            .attr('height', 100)
            .attr("x", "0%")
            .attr("y", "0%");

        // pattern for drinking water image, for showing image inside circle
        svgDefs.append("pattern")
            .attr("id", "drinkingWaterImage")
            .attr("x", "0%")
            .attr("y", "0%")
            .attr("width", "100%")
            .attr("height", "100%").attr("viewBox", "0 0 100 100")
            .append('image')
            .attr('xlink:href', 'https://waterwegenvic.ml/Content/Image/WaterCycle/drinkingwater.jpg')
            .attr('width', 100)
            .attr('height', 100)
            .attr("x", "0%")
            .attr("y", "0%");

        // pattern for ground water image, for showing image inside circle
        svgDefs.append("pattern")
            .attr("id", "groundWaterImage")
            .attr("x", "0%")
            .attr("y", "0%")
            .attr("width", "100%")
            .attr("height", "100%").attr("viewBox", "0 0 100 100")
            .append('image')
            .attr('xlink:href', 'https://waterwegenvic.ml/Content/Image/WaterCycle/groundwater.jpg')
            .attr('width', 100)
            .attr('height', 100)
            .attr("x", "0%")
            .attr("y", "0%");

        // pattern for ground water image, for showing image inside circle
        svgDefs.append("pattern")
            .attr("id", "waterWayImage")
            .attr("x", "0%")
            .attr("y", "0%")
            .attr("width", "100%")
            .attr("height", "100%").attr("viewBox", "0 0 100 100")
            .append('image')
            .attr('xlink:href', 'https://waterwegenvic.ml/Content/Image/WaterCycle/waterways.jpg')
            .attr('width', 100)
            .attr('height', 100)
            .attr("x", "0%")
            .attr("y", "0%");

        // title
        svg.append("text")
            .attr("x", 0)
            .attr("y", 35)
            .attr("dy", "0.71em")
            .style("font-size", "26px")
            .text("The Life Cycle of Water")
            .style("font-family", fontFamilty)
            .style("text-decoration", "underline")
            .style("fill", defaultColor);

        var hoverTransition = 100;

        // Rain
        svg.append("circle")
            .attr("cx", 250)
            .attr("cy", 150)
            .attr("r", circleDefaultRadius)
            .style("fill", "url(#rainImage)")
            .style("stroke", defaultColor)
            .style("stroke-width", arrowCircleBorderWidth)
            .attr("class", "cirlceRain")
            .on("mouseover", function (d) {
                d3.select(this)
                    .transition()
                    .duration(hoverTransition)
                    .attr('r', circleHoverRadius);
            })
            .style("cursor", "pointer")
            .on("mouseout", function (d) {
                d3.select(this)
                    .transition()
                    .duration(hoverTransition)
                    .attr('r', circleDefaultRadius);
            })
            .on("click", function () {
                $('#rainDetailModal').modal('show');
            });

        var circleInnerColor = "red";

        svg.append("text")
            .attr("x", 250)
            .attr("y", 150)
            .attr("dy", "0.3em")
            .style("font-family", fontFamilty)
            .style("fill", circleInnerColor)
            .style("font-size", innerCicleTextFontSize)
            .text("Rain")
            .style("cursor", "pointer")
            .attr("class", "textRain")
            .style("text-anchor", "middle")
            .on("mouseover", function (d) {
                d3.select(".cirlceRain")
                    .transition()
                    .duration(hoverTransition)
                    .attr('r', circleHoverRadius);
            })
            .on("mouseout", function (d) {
                d3.select(".cirlceRain")
                    .transition()
                    .duration(hoverTransition)
                    .attr('r', circleDefaultRadius);
            })
            .on("click", function () {
                $('#rainDetailModal').modal('show');
            });

        // Water way
        svg.append("circle")
            .attr("cx", 50)
            .attr("cy", 280)
            .attr("r", circleDefaultRadius)
            .style("fill", "url(#waterWayImage)")
            .style("stroke", defaultColor)
            .style("stroke-width", arrowCircleBorderWidth)
            .attr("class", "cirlceWaterway")
            .style("cursor", "pointer")
            .on("mouseover", function (d) {
                //d3.select(this).style("fill", "grey");
                d3.select(this)
                    .transition()
                    .duration(hoverTransition)
                    .attr('r', circleHoverRadius);
            })
            .on("mouseout", function (d) {
                //d3.select(this).style("fill", "url(#waterWayImage)");
                d3.select(this)
                    .transition()
                    .duration(hoverTransition)
                    .attr('r', circleDefaultRadius);
            })
            .on("click", function () {
                $('#waterWayDetailModal').modal('show');
            });



        var txtWaterWay = svg.append("text")
            .attr("x", 50)
            .attr("y", 280)
            .style("font-family", fontFamilty)
            .style("fill", circleInnerColor)
            .style("font-size", innerCicleTextFontSize)
            .attr("class", "textWaterway")
            .style("text-anchor", "middle")
            .style("cursor", "pointer")
            .on("mouseover", function (d) {
                d3.select(".cirlceWaterway").transition()
                    .duration(hoverTransition)
                    .attr('r', circleHoverRadius);
            })
            .on("mouseout", function (d) {
                d3.select(".cirlceWaterway").transition()
                    .duration(hoverTransition)
                    .attr('r', circleDefaultRadius);
            })
            .on("click", function () {
                $('#waterWayDetailModal').modal('show');;
            });

        txtWaterWay.append("tspan").attr("dy", "0.0em").text("Water-");
        txtWaterWay.append("tspan").attr("dy", "1em").attr("x", 50).text("ways");

        // Storm water
        svg.append("circle")
            .attr("cx", 460)
            .attr("cy", 280)
            .attr("r", circleDefaultRadius)
            .style("fill", "url(#stormWaterImage)")
            .style("stroke", defaultColor)
            .attr("class", "cirlceStormWater")
            .style("stroke-width", arrowCircleBorderWidth)
            .on("mouseover", function (d) {
                d3.select(this).transition()
                    .duration(hoverTransition)
                    .attr('r', circleHoverRadius);
            })
            .style("cursor", "pointer")
            .on("mouseout", function (d) {
                d3.select(this).transition()
                    .duration(hoverTransition)
                    .attr('r', circleDefaultRadius);
            }).on("click", function () {
                $('#stormWaterDetailModal').modal('show');;
            });

        var txtStormWater = svg.append("text")
            .attr("x", 460)
            .attr("y", 280)
            .style("font-family", fontFamilty)
            .style("fill", circleInnerColor)//defaultColor)
            .style("font-size", innerCicleTextFontSize)
            .style("text-anchor", "middle")
            .on("mouseover", function (d) {
                d3.select(".cirlceStormWater").transition()
                    .duration(hoverTransition)
                    .attr('r', circleHoverRadius);
            })
            .on("mouseout", function (d) {
                d3.select(".cirlceStormWater").transition()
                    .duration(hoverTransition)
                    .attr('r', circleDefaultRadius);
            })
            .style("cursor", "pointer")
            .on("click", function () {
                $('#stormWaterDetailModal').modal('show');
            });

        txtStormWater.append("tspan").attr("dy", "0.0em").text("Storm-");
        txtStormWater.append("tspan").attr("dy", "1em").attr("x", 460).text("water");

        // ground water
        svg.append("circle")
            .attr("cx", 250)
            .attr("cy", 400)
            .attr("r", circleDefaultRadius)
            .style("fill", "url(#groundWaterImage)")
            .style("stroke", defaultColor)
            .style("stroke-width", arrowCircleBorderWidth)
            .attr("class", "cirlceGroundWater")
            .on("mouseover", function (d) {
                d3.select(this).transition()
                    .duration(hoverTransition)
                    .attr('r', circleHoverRadius);
            })
            .style("cursor", "pointer")
            .on("mouseout", function (d) {
                d3.select(this).transition()
                    .duration(hoverTransition)
                    .attr('r', circleDefaultRadius);
            })
            .on("click", function () {
                $('#groundWaterDetailModal').modal('show');;
            });

        var txtGroundWater = svg.append("text")
            .attr("x", 250)
            .attr("y", 400)
            .style("font-family", fontFamilty)
            .style("fill", circleInnerColor)
            .style("font-size", innerCicleTextFontSize)
            .style("text-anchor", "middle")
            .on("mouseover", function (d) {
                d3.select(".cirlceGroundWater").transition()
                    .duration(hoverTransition)
                    .attr('r', circleHoverRadius);
            })
            .on("mouseout", function (d) {
                d3.select(".cirlceGroundWater").transition()
                    .duration(hoverTransition)
                    .attr('r', circleDefaultRadius);
            })
            .style("cursor", "pointer")
            .on("click", function () {
                $('#groundWaterDetailModal').modal('show');;
            });

        txtGroundWater.append("tspan").attr("dy", "0.0em").text("Ground-");
        txtGroundWater.append("tspan").attr("dy", "1em").attr("x", 250).text("water");

        // Drinking water
        svg.append("circle")
            .attr("cx", 460)
            .attr("cy", 500)
            .attr("r", circleDefaultRadius)
            .style("fill", "url(#drinkingWaterImage)")
            .style("stroke", defaultColor)
            .attr("class", "cirlceDrinkingWater")
            .style("stroke-width", arrowCircleBorderWidth)
            .on("mouseover", function (d) {
                d3.select(this).transition()
                    .duration(hoverTransition)
                    .attr('r', circleHoverRadius);
            })
            .style("cursor", "pointer")
            .on("mouseout", function (d) {
                d3.select(this).transition()
                    .duration(hoverTransition)
                    .attr('r', circleDefaultRadius);
            })
            .on("click", function () {
                $('#drinkingWaterDetailModal').modal('show');
            });

        var txtDrinkingWater = svg.append("text")
            .attr("x", 460)
            .attr("y", 500)
            .style("font-family", fontFamilty)
            .style("fill", circleInnerColor)//defaultColor)
            .style("font-size", innerCicleTextFontSize)
            .style("text-anchor", "middle")
            .on("mouseover", function (d) {
                d3.select(".cirlceDrinkingWater").transition()
                    .duration(hoverTransition)
                    .attr('r', circleHoverRadius);
            })
            .on("mouseout", function (d) {
                d3.select(".cirlceDrinkingWater").transition()
                    .duration(hoverTransition)
                    .attr('r', circleDefaultRadius);
            })
            .style("cursor", "pointer")
            .on("click", function () {
                $('#drinkingWaterDetailModal').modal('show');;
            });

        txtDrinkingWater.append("tspan").attr("dy", "0.0em").text("Drinking");
        txtDrinkingWater.append("tspan").attr("dy", "1em").attr("x", 460).text("Water");

        // Add arrows
        //1
        svg.append("line")
            .attr("x1", 75)
            .attr("y1", 230)
            .attr("x2", 190)
            .attr("y2", 150)
            .attr("stroke-width", arrowCircleBorderWidth)
            .attr("stroke", defaultColor)
            .attr("marker-end", "url(#triangle)");

        var arrowCaptionFontSize = "16px";
        // add evaporate text
        svg.append("text")
            .attr("x", 135)
            .attr("y", 170)
            .attr("dy", "0.71em")
            .text("evaporate")
            .style("font-family", fontFamilty)
            .style("fill", defaultColor)
            .style("font-size", innerCicleTextFontSize)
            .style("text-anchor", "end");

        // arrow 2
        svg.append("line")
            .attr("x1", 305)
            .attr("y1", 150)
            .attr("x2", 425)
            .attr("y2", 230)
            .attr("stroke-width", arrowCircleBorderWidth)
            .attr("stroke", defaultColor)
            .attr("marker-end", "url(#triangle)");

        // add falls to the earth
        var arrowCaption = svg.append("text")
            .attr("x", 365)
            .attr("y", 180)
            .attr("dy", "0.71em")
            .style("font-family", fontFamilty)
            .style("fill", defaultColor)
            .style("font-size", innerCicleTextFontSize)
            .style("text-anchor", "start");

        arrowCaption.append("tspan").attr("dy", "0.1em").text("falls to");
        arrowCaption.append("tspan").attr("dy", "1em").attr("x", "385").text("the earth");

        //// arrow 3
        svg.append("line")
            .attr("x1", 425)
            .attr("y1", 325)
            .attr("x2", 310)
            .attr("y2", 380)
            .attr("stroke-width", arrowCircleBorderWidth)
            .attr("stroke", defaultColor)
            .attr("marker-end", "url(#triangle)");

        // add becomes text
        svg.append("text")
            .attr("x", 370)
            .attr("y", 365)
            .attr("dy", "0.3em")
            .text("becomes")
            .style("font-family", fontFamilty)
            .style("fill", defaultColor)
            .style("font-size", innerCicleTextFontSize)
            .style("text-anchor", "start");

        //// arrow 4
        svg.append("line")
            .attr("x1", 195)
            .attr("y1", 380)
            .attr("x2", 95)
            .attr("y2", 320)
            .attr("stroke-width", arrowCircleBorderWidth)
            .attr("stroke", defaultColor)
            .attr("marker-end", "url(#triangle)");

        // add effect text
        svg.append("text")
            .attr("x", 145)
            .attr("y", 360)
            .attr("dy", "0.3em")
            .text("effect")
            .style("font-family", fontFamilty)
            .style("fill", defaultColor)
            .style("font-size", innerCicleTextFontSize)
            .style("text-anchor", "end");

        //// arrow 5
        svg.append("line")
            .attr("x1", 300)
            .attr("y1", 420)
            .attr("x2", 400)
            .attr("y2", 480)
            .attr("stroke-width", arrowCircleBorderWidth)
            .attr("stroke", defaultColor)
            .attr("marker-end", "url(#triangle)");

        // add provides text
        svg.append("text")
            .attr("x", 350)
            .attr("y", 460)
            .attr("dy", "0.3em")
            .text("provides")
            .style("font-family", fontFamilty)
            .style("fill", defaultColor)
            .style("font-size", innerCicleTextFontSize)
            .style("text-anchor", "end");
    }

    drawChart();
</script>
